From d0daf0d05654d2baa67a6c68ed1e954fa87cb76c Mon Sep 17 00:00:00 2001
From: Jarno Rajahalme <jarno@isovalent.com>
Date: Thu, 6 Jan 2022 16:34:27 +0200
Subject: [PATCH] build: Cross-compilation fix for arm64

This change adds the possibility to cross-compile Envoy for aarch64
target on host by using a toolchain which defines "aarch64-cross"
platform.

Signed-off-by: Michal Rostecki <mrostecki@opensuse.org>
Signed-off-by: Jarno Rajahalme <jarno@isovalent.com>
---
 bazel/BUILD                  | 10 ++++++++++
 bazel/envoy_build_system.bzl |  6 ------
 bazel/foreign_cc/BUILD       | 19 ++++++++++++++++++-
 3 files changed, 28 insertions(+), 7 deletions(-)

diff --git a/bazel/BUILD b/bazel/BUILD
index 3b22ffc8f..2da063b7f 100644
--- a/bazel/BUILD
+++ b/bazel/BUILD
@@ -439,11 +439,21 @@ config_setting(
     values = {"cpu": "k8"},
 )
 
+config_setting(
+    name = "linux_x86_64_cross",
+    define_values = {"cross": "x86_64"},
+)
+
 config_setting(
     name = "linux_aarch64",
     values = {"cpu": "aarch64"},
 )
 
+config_setting(
+    name = "linux_aarch64_cross",
+    define_values = {"cross": "aarch64"},
+)
+
 config_setting(
     name = "linux_ppc",
     values = {"cpu": "ppc"},
diff --git a/bazel/envoy_build_system.bzl b/bazel/envoy_build_system.bzl
index f48ebe705..a682b2ad7 100644
--- a/bazel/envoy_build_system.bzl
+++ b/bazel/envoy_build_system.bzl
@@ -101,7 +101,6 @@ def envoy_cmake(
         copy_pdb = False,
         pdb_name = "",
         cmake_files_dir = "$BUILD_TMPDIR/CMakeFiles",
-        generate_crosstool_file = False,
         **kwargs):
     cache_entries.update({"CMAKE_BUILD_TYPE": "Bazel"})
     cache_entries_debug = dict(cache_entries)
@@ -135,11 +134,6 @@ def envoy_cmake(
         targets = ["", "install"],
         # TODO: Remove install target and make this work
         install = False,
-        # TODO(lizan): Make this always true
-        generate_crosstool_file = select({
-            "@envoy//bazel:windows_x86_64": True,
-            "//conditions:default": generate_crosstool_file,
-        }),
         lib_source = lib_source,
         postfix_script = pf,
         **kwargs
diff --git a/bazel/foreign_cc/BUILD b/bazel/foreign_cc/BUILD
index e55355fe8..94eab1726 100644
--- a/bazel/foreign_cc/BUILD
+++ b/bazel/foreign_cc/BUILD
@@ -16,6 +16,8 @@ configure_make(
         "--disable-libunwind",
     ] + select({
         "//bazel:apple": ["AR=/usr/bin/ar"],
+        "//bazel:linux_aarch64_cross": ["--host aarch64-linux-gnu"],
+        "//bazel:linux_x86_64_cross": ["--host x86_64-linux-gnu"],
         "//conditions:default": [],
     }),
     lib_source = "@com_github_gperftools_gperftools//:all",
@@ -75,6 +77,14 @@ configure_make(
         "//bazel:asan_build": {"ENVOY_CONFIG_ASAN": "1"},
         "//bazel:msan_build": {"ENVOY_CONFIG_MSAN": "1"},
         "//bazel:windows_dbg_build": {"WINDOWS_DBG_BUILD": "debug"},
+        "//bazel:linux_aarch64_cross": {
+            "CC": "gcc",
+            "CROSS": "aarch64-linux-gnu-",
+        },
+        "//bazel:linux_x86_64_cross": {
+            "CC": "gcc",
+            "CROSS": "x86_64-linux-gnu-",
+        },
         "//conditions:default": {},
     }),
     lib_source = "@com_github_luajit_luajit//:all",
@@ -95,6 +105,14 @@ configure_make(
         # TODO(htuch): Remove when #6084 is fixed
         "//bazel:asan_build": {"ENVOY_CONFIG_ASAN": "1"},
         "//bazel:msan_build": {"ENVOY_CONFIG_MSAN": "1"},
+        "//bazel:linux_aarch64_cross": {
+            "CC": "gcc",
+            "CROSS": "aarch64-linux-gnu-",
+        },
+        "//bazel:linux_x86_64_cross": {
+            "CC": "gcc",
+            "CROSS": "x86_64-linux-gnu-",
+        },
         "//conditions:default": {},
     }),
     lib_source = "@com_github_moonjit_moonjit//:all",
@@ -184,7 +202,6 @@ envoy_cmake(
         "CMAKE_CXX_COMPILER_FORCED": "on",
     },
     defines = ["CURL_STATICLIB"],
-    generate_crosstool_file = True,
     lib_source = "@com_github_curl//:all",
     out_static_libs = select({
         "//bazel:windows_x86_64": ["libcurl.lib"],
-- 
2.34.0

