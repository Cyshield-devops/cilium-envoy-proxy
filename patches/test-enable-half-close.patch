diff --git a/test/integration/fake_upstream.cc b/test/integration/fake_upstream.cc
index 5ed0c5cad6..2a5edabe35 100644
--- a/test/integration/fake_upstream.cc
+++ b/test/integration/fake_upstream.cc
@@ -432,9 +432,10 @@ FakeUpstream::FakeUpstream(uint32_t port, FakeHttpConnection::Type type,
 
 FakeUpstream::FakeUpstream(Network::TransportSocketFactoryPtr&& transport_socket_factory,
                            uint32_t port, FakeHttpConnection::Type type,
-                           Network::Address::IpVersion version, Event::TestTimeSystem& time_system)
+                           Network::Address::IpVersion version, Event::TestTimeSystem& time_system,
+                           bool enable_half_close)
     : FakeUpstream(std::move(transport_socket_factory), makeTcpListenSocket(port, version), type,
-                   time_system, false) {
+                   time_system, enable_half_close) {
   ENVOY_LOG(info, "starting fake SSL server on port {}. Address version is {}",
             localAddress()->ip()->port(), Network::Test::addressVersionAsString(version));
 }
@@ -546,7 +547,9 @@ FakeUpstream::waitForHttpConnection(Event::Dispatcher& client_dispatcher,
             envoy::config::core::v3::HttpProtocolOptions::ALLOW);
       }
       VERIFY_ASSERTION(connection->initialize());
-      VERIFY_ASSERTION(connection->readDisable(false));
+      if (upstream.read_disable_on_new_connection_) {
+        VERIFY_ASSERTION(connection->readDisable(false));
+      }
       return AssertionSuccess();
     }
   }
@@ -568,7 +571,9 @@ AssertionResult FakeUpstream::waitForRawConnection(FakeRawConnectionPtr& connect
     connection = std::make_unique<FakeRawConnection>(consumeConnection(), timeSystem());
   }
   VERIFY_ASSERTION(connection->initialize());
-  VERIFY_ASSERTION(connection->readDisable(false));
+  if (read_disable_on_new_connection_) {
+    VERIFY_ASSERTION(connection->readDisable(false));
+  }
   VERIFY_ASSERTION(connection->enableHalfClose(enable_half_close_));
   return AssertionSuccess();
 }
diff --git a/test/integration/fake_upstream.h b/test/integration/fake_upstream.h
index 538b2808b6..c05e35a883 100644
--- a/test/integration/fake_upstream.h
+++ b/test/integration/fake_upstream.h
@@ -554,7 +554,7 @@ public:
                Event::TestTimeSystem& time_system, bool enable_half_close = false);
   FakeUpstream(Network::TransportSocketFactoryPtr&& transport_socket_factory, uint32_t port,
                FakeHttpConnection::Type type, Network::Address::IpVersion version,
-               Event::TestTimeSystem& time_system);
+               Event::TestTimeSystem& time_system, bool enable_half_close = false);
   ~FakeUpstream() override;
 
   FakeHttpConnection::Type httpType() { return http_type_; }
