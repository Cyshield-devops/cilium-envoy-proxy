// Code generated by protoc-gen-go. DO NOT EDIT.
// source: envoy/config/filter/http/router/v2/router.proto

package v2

import (
	fmt "fmt"
	v2 "github.com/cilium/proxy/go/envoy/config/filter/accesslog/v2"
	proto "github.com/golang/protobuf/proto"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Router struct {
	// Whether the router generates dynamic cluster statistics. Defaults to
	// true. Can be disabled in high performance scenarios.
	DynamicStats *wrappers.BoolValue `protobuf:"bytes,1,opt,name=dynamic_stats,json=dynamicStats,proto3" json:"dynamic_stats,omitempty"`
	// Whether to start a child span for egress routed calls. This can be
	// useful in scenarios where other filters (auth, ratelimit, etc.) make
	// outbound calls and have child spans rooted at the same ingress
	// parent. Defaults to false.
	StartChildSpan bool `protobuf:"varint,2,opt,name=start_child_span,json=startChildSpan,proto3" json:"start_child_span,omitempty"`
	// Configuration for HTTP upstream logs emitted by the router. Upstream logs
	// are configured in the same way as access logs, but each log entry represents
	// an upstream request. Presuming retries are configured, multiple upstream
	// requests may be made for each downstream (inbound) request.
	UpstreamLog []*v2.AccessLog `protobuf:"bytes,3,rep,name=upstream_log,json=upstreamLog,proto3" json:"upstream_log,omitempty"`
	// Do not add any additional *x-envoy-* headers to requests or responses. This
	// only affects the :ref:`router filter generated *x-envoy-* headers
	// <config_http_filters_router_headers_set>`, other Envoy filters and the HTTP
	// connection manager may continue to set *x-envoy-* headers.
	SuppressEnvoyHeaders bool     `protobuf:"varint,4,opt,name=suppress_envoy_headers,json=suppressEnvoyHeaders,proto3" json:"suppress_envoy_headers,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Router) Reset()         { *m = Router{} }
func (m *Router) String() string { return proto.CompactTextString(m) }
func (*Router) ProtoMessage()    {}
func (*Router) Descriptor() ([]byte, []int) {
	return fileDescriptor_cc1f525510d06eb8, []int{0}
}

func (m *Router) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Router.Unmarshal(m, b)
}
func (m *Router) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Router.Marshal(b, m, deterministic)
}
func (m *Router) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Router.Merge(m, src)
}
func (m *Router) XXX_Size() int {
	return xxx_messageInfo_Router.Size(m)
}
func (m *Router) XXX_DiscardUnknown() {
	xxx_messageInfo_Router.DiscardUnknown(m)
}

var xxx_messageInfo_Router proto.InternalMessageInfo

func (m *Router) GetDynamicStats() *wrappers.BoolValue {
	if m != nil {
		return m.DynamicStats
	}
	return nil
}

func (m *Router) GetStartChildSpan() bool {
	if m != nil {
		return m.StartChildSpan
	}
	return false
}

func (m *Router) GetUpstreamLog() []*v2.AccessLog {
	if m != nil {
		return m.UpstreamLog
	}
	return nil
}

func (m *Router) GetSuppressEnvoyHeaders() bool {
	if m != nil {
		return m.SuppressEnvoyHeaders
	}
	return false
}

func init() {
	proto.RegisterType((*Router)(nil), "envoy.config.filter.http.router.v2.Router")
}

func init() {
	proto.RegisterFile("envoy/config/filter/http/router/v2/router.proto", fileDescriptor_cc1f525510d06eb8)
}

var fileDescriptor_cc1f525510d06eb8 = []byte{
	// 317 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x91, 0xc1, 0x4b, 0x33, 0x31,
	0x10, 0xc5, 0xd9, 0xf6, 0xa3, 0x7c, 0x64, 0xab, 0xc8, 0x22, 0xb2, 0xf4, 0x20, 0xa5, 0xa7, 0x05,
	0x21, 0x29, 0xab, 0x77, 0xb1, 0x52, 0xf0, 0x50, 0xa4, 0x6c, 0xc1, 0x83, 0x97, 0x25, 0xdd, 0xa6,
	0xe9, 0x42, 0xba, 0x13, 0x32, 0xd9, 0xd5, 0xfe, 0xe9, 0xde, 0x24, 0x49, 0xab, 0x97, 0x82, 0xb7,
	0x99, 0x79, 0xf3, 0x7e, 0x43, 0x5e, 0x08, 0x13, 0x4d, 0x07, 0x07, 0x56, 0x41, 0xb3, 0xad, 0x25,
	0xdb, 0xd6, 0xca, 0x0a, 0xc3, 0x76, 0xd6, 0x6a, 0x66, 0xa0, 0x75, 0x75, 0x97, 0x1f, 0x2b, 0xaa,
	0x0d, 0x58, 0x48, 0x26, 0xde, 0x40, 0x83, 0x81, 0x06, 0x03, 0x75, 0x06, 0x7a, 0x5c, 0xeb, 0xf2,
	0xd1, 0xf4, 0x1c, 0x94, 0x57, 0x95, 0x40, 0x54, 0x20, 0x1d, 0xf2, 0xa7, 0x09, 0xd4, 0xd1, 0xad,
	0x04, 0x90, 0x4a, 0x30, 0xdf, 0xad, 0xdb, 0x2d, 0xfb, 0x30, 0x5c, 0x6b, 0x61, 0x30, 0xe8, 0x93,
	0xaf, 0x88, 0x0c, 0x0a, 0xcf, 0x4f, 0x1e, 0xc9, 0xc5, 0xe6, 0xd0, 0xf0, 0x7d, 0x5d, 0x95, 0x68,
	0xb9, 0xc5, 0x34, 0x1a, 0x47, 0x59, 0x9c, 0x8f, 0x68, 0x40, 0xd0, 0x13, 0x82, 0xce, 0x00, 0xd4,
	0x1b, 0x57, 0xad, 0x28, 0x86, 0x47, 0xc3, 0xca, 0xed, 0x27, 0x19, 0xb9, 0x42, 0xcb, 0x8d, 0x2d,
	0xab, 0x5d, 0xad, 0x36, 0x25, 0x6a, 0xde, 0xa4, 0xbd, 0x71, 0x94, 0xfd, 0x2f, 0x2e, 0xfd, 0xfc,
	0xd9, 0x8d, 0x57, 0x9a, 0x37, 0xc9, 0x2b, 0x19, 0xb6, 0x1a, 0xad, 0x11, 0x7c, 0x5f, 0x2a, 0x90,
	0x69, 0x7f, 0xdc, 0xcf, 0xe2, 0xfc, 0x8e, 0x9e, 0x8b, 0xe0, 0xf7, 0x45, 0x5d, 0x4e, 0x9f, 0x7c,
	0xb3, 0x00, 0x59, 0xc4, 0x27, 0xc0, 0x02, 0x64, 0xf2, 0x40, 0x6e, 0xb0, 0xd5, 0xda, 0x08, 0xc4,
	0xd2, 0x33, 0xca, 0x9d, 0xe0, 0x1b, 0x61, 0x30, 0xfd, 0xe7, 0xef, 0x5f, 0x9f, 0xd4, 0xb9, 0x13,
	0x5f, 0x82, 0x36, 0x9b, 0x93, 0x69, 0x0d, 0xe1, 0xa6, 0x36, 0xf0, 0x79, 0xa0, 0x7f, 0xff, 0xc0,
	0x2c, 0x0e, 0x61, 0x2d, 0x5d, 0x16, 0xcb, 0xe8, 0xbd, 0xd7, 0xe5, 0xeb, 0x81, 0x0f, 0xe6, 0xfe,
	0x3b, 0x00, 0x00, 0xff, 0xff, 0x0d, 0xe7, 0xbe, 0xc5, 0xf2, 0x01, 0x00, 0x00,
}
